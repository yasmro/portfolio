{"ast":null,"code":"const testSketch = p => {\n  let rotation = 0;\n  let xspacing = 1; // Distance between each horizontal location\n\n  let w; // Width of entire wave\n\n  let theta = 0.0; // Start angle at 0\n\n  let amplitude = 35.0; // Height of wave\n\n  let period = 500.0; // How many pixels before the wave repeats\n\n  let dx; // Value for incrementing x\n\n  let yvalues; // Using an array to store height values for the wave\n\n  let TWO_PI = 2 * 3.14159; //初期設定\n\n  p.setup = () => {\n    // p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL)\n    p.createCanvas(600, 600);\n    w = p.windowWidth + 1;\n    dx = TWO_PI / period * xspacing;\n    yvalues = new Array(Math.floor(w / xspacing));\n  }; //P5Wrapperコンポーネントからのpropsの受け渡し\n\n\n  p.myCustomRedrawAccordingToNewPropsHandler = props => {\n    if (props.rotation) {\n      rotation = props.rotation * Math.PI / 180;\n    }\n  }; //毎フレームごとの描画内容\n\n\n  p.draw = () => {\n    p.background(255);\n    p.calcWave();\n    p.renderWave();\n    p.calcWave2();\n    p.renderWave2(); // p.normalMaterial()\n    // p.noStroke()\n    // p.push()\n    // p.rotateY(rotation)\n    // p.box(100)\n    // p.pop()\n  };\n\n  p.calcWave = () => {\n    // Increment theta (try different values for\n    // 'angular velocity' here)\n    theta += 0.02; // For every x value, calculate a y value with sine function\n\n    let x = theta;\n\n    for (let i = 0; i < yvalues.length; i++) {\n      yvalues[i] = Math.sin(x) * amplitude;\n      x += dx;\n    }\n  };\n\n  p.calcWave2 = () => {\n    // Increment theta (try different values for\n    // 'angular velocity' here)\n    theta += 0.02; // For every x value, calculate a y value with sine function\n\n    let x = theta;\n\n    for (let i = 0; i < yvalues.length; i++) {\n      yvalues[i] = Math.sin(x) * amplitude + TWO_PI / 8;\n      x += dx;\n    }\n  };\n\n  p.renderWave = () => {\n    p.noStroke();\n    p.fill(40); // A simple way to draw the wave with an ellipse at each location\n\n    for (let x = 0; x < yvalues.length; x++) {\n      p.ellipse(x * xspacing, p.windowHeight / 2 + yvalues[x], 1, 1);\n    }\n  };\n\n  p.renderWave2 = () => {\n    p.noStroke();\n    p.fill(40); // A simple way to draw the wave with an ellipse at each location\n\n    for (let x = 0; x < yvalues.length; x++) {\n      p.ellipse(x * xspacing, p.windowHeight / 2 + yvalues[x], 1, 1);\n    }\n  };\n};\n\nexport default testSketch;","map":{"version":3,"sources":["/Users/YuOhno/portfoliov3/src/components/animation/testSketch.js"],"names":["testSketch","p","rotation","xspacing","w","theta","amplitude","period","dx","yvalues","TWO_PI","setup","createCanvas","windowWidth","Array","Math","floor","myCustomRedrawAccordingToNewPropsHandler","props","PI","draw","background","calcWave","renderWave","calcWave2","renderWave2","x","i","length","sin","noStroke","fill","ellipse","windowHeight"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,CAAD,IAAO;AACtB,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf,CAFsB,CAEJ;;AAClB,MAAIC,CAAJ,CAHsB,CAGf;;AACP,MAAIC,KAAK,GAAG,GAAZ,CAJsB,CAIL;;AACjB,MAAIC,SAAS,GAAG,IAAhB,CALsB,CAKA;;AACtB,MAAIC,MAAM,GAAG,KAAb,CANsB,CAMF;;AACpB,MAAIC,EAAJ,CAPsB,CAOd;;AACR,MAAIC,OAAJ,CARsB,CAQT;;AACb,MAAIC,MAAM,GAAG,IAAE,OAAf,CATsB,CAWtB;;AACAT,EAAAA,CAAC,CAACU,KAAF,GAAU,MAAM;AACZ;AACAV,IAAAA,CAAC,CAACW,YAAF,CAAe,GAAf,EAAmB,GAAnB;AACAR,IAAAA,CAAC,GAAGH,CAAC,CAACY,WAAF,GAAgB,CAApB;AACAL,IAAAA,EAAE,GAAIE,MAAM,GAAGH,MAAV,GAAoBJ,QAAzB;AACAM,IAAAA,OAAO,GAAG,IAAIK,KAAJ,CAAUC,IAAI,CAACC,KAAL,CAAWZ,CAAC,GAAGD,QAAf,CAAV,CAAV;AACH,GAND,CAZsB,CAoBtB;;;AACAF,EAAAA,CAAC,CAACgB,wCAAF,GAA8CC,KAAD,IAAW;AACpD,QAAIA,KAAK,CAAChB,QAAV,EAAmB;AACfA,MAAAA,QAAQ,GAAGgB,KAAK,CAAChB,QAAN,GAAiBa,IAAI,CAACI,EAAtB,GAA2B,GAAtC;AACH;AACJ,GAJD,CArBsB,CA2BtB;;;AACAlB,EAAAA,CAAC,CAACmB,IAAF,GAAS,MAAM;AACXnB,IAAAA,CAAC,CAACoB,UAAF,CAAa,GAAb;AACApB,IAAAA,CAAC,CAACqB,QAAF;AACArB,IAAAA,CAAC,CAACsB,UAAF;AAEAtB,IAAAA,CAAC,CAACuB,SAAF;AACAvB,IAAAA,CAAC,CAACwB,WAAF,GANW,CAOX;AACA;AACA;AACA;AACA;AACA;AACH,GAbD;;AAeAxB,EAAAA,CAAC,CAACqB,QAAF,GAAa,MAAM;AACf;AACA;AACAjB,IAAAA,KAAK,IAAI,IAAT,CAHe,CAKf;;AACA,QAAIqB,CAAC,GAAGrB,KAAR;;AACA,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACmB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvClB,MAAAA,OAAO,CAACkB,CAAD,CAAP,GAAaZ,IAAI,CAACc,GAAL,CAASH,CAAT,IAAcpB,SAA3B;AACAoB,MAAAA,CAAC,IAAIlB,EAAL;AACD;AACJ,GAXD;;AAaAP,EAAAA,CAAC,CAACuB,SAAF,GAAc,MAAM;AAChB;AACA;AACAnB,IAAAA,KAAK,IAAI,IAAT,CAHgB,CAKhB;;AACA,QAAIqB,CAAC,GAAGrB,KAAR;;AACA,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACmB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvClB,MAAAA,OAAO,CAACkB,CAAD,CAAP,GAAaZ,IAAI,CAACc,GAAL,CAASH,CAAT,IAAcpB,SAAd,GAA0BI,MAAM,GAAG,CAAhD;AACAgB,MAAAA,CAAC,IAAIlB,EAAL;AACD;AACJ,GAXD;;AAaAP,EAAAA,CAAC,CAACsB,UAAF,GAAe,MAAM;AACjBtB,IAAAA,CAAC,CAAC6B,QAAF;AACA7B,IAAAA,CAAC,CAAC8B,IAAF,CAAO,EAAP,EAFiB,CAGjB;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,OAAO,CAACmB,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCzB,MAAAA,CAAC,CAAC+B,OAAF,CAAUN,CAAC,GAAGvB,QAAd,EAAwBF,CAAC,CAACgC,YAAF,GAAiB,CAAjB,GAAqBxB,OAAO,CAACiB,CAAD,CAApD,EAAyD,CAAzD,EAA4D,CAA5D;AACD;AACJ,GAPD;;AASAzB,EAAAA,CAAC,CAACwB,WAAF,GAAgB,MAAM;AAClBxB,IAAAA,CAAC,CAAC6B,QAAF;AACA7B,IAAAA,CAAC,CAAC8B,IAAF,CAAO,EAAP,EAFkB,CAGlB;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,OAAO,CAACmB,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCzB,MAAAA,CAAC,CAAC+B,OAAF,CAAUN,CAAC,GAAGvB,QAAd,EAAwBF,CAAC,CAACgC,YAAF,GAAiB,CAAjB,GAAqBxB,OAAO,CAACiB,CAAD,CAApD,EAAyD,CAAzD,EAA4D,CAA5D;AACD;AACJ,GAPD;AAUH,CAxFD;;AA0FA,eAAe1B,UAAf","sourcesContent":["const testSketch = (p) => {\n    let rotation = 0\n    let xspacing = 1; // Distance between each horizontal location\n    let w; // Width of entire wave\n    let theta = 0.0; // Start angle at 0\n    let amplitude = 35.0; // Height of wave\n    let period = 500.0; // How many pixels before the wave repeats\n    let dx; // Value for incrementing x\n    let yvalues; // Using an array to store height values for the wave\n    let TWO_PI = 2*3.14159;\n\n    //初期設定\n    p.setup = () => {\n        // p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL)\n        p.createCanvas(600,600)\n        w = p.windowWidth + 1;\n        dx = (TWO_PI / period) * xspacing;\n        yvalues = new Array(Math.floor(w / xspacing));\n    }\n\n    //P5Wrapperコンポーネントからのpropsの受け渡し\n    p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n        if (props.rotation){\n            rotation = props.rotation * Math.PI / 180\n        }\n    }\n\n    //毎フレームごとの描画内容\n    p.draw = () => {\n        p.background(255)\n        p.calcWave();\n        p.renderWave();\n\n        p.calcWave2();\n        p.renderWave2();\n        // p.normalMaterial()\n        // p.noStroke()\n        // p.push()\n        // p.rotateY(rotation)\n        // p.box(100)\n        // p.pop()\n    }\n\n    p.calcWave = () => {\n        // Increment theta (try different values for\n        // 'angular velocity' here)\n        theta += 0.02;\n      \n        // For every x value, calculate a y value with sine function\n        let x = theta;\n        for (let i = 0; i < yvalues.length; i++) {\n          yvalues[i] = Math.sin(x) * amplitude;\n          x += dx;\n        }\n    }\n\n    p.calcWave2 = () => {\n        // Increment theta (try different values for\n        // 'angular velocity' here)\n        theta += 0.02;\n      \n        // For every x value, calculate a y value with sine function\n        let x = theta;\n        for (let i = 0; i < yvalues.length; i++) {\n          yvalues[i] = Math.sin(x) * amplitude + TWO_PI / 8;\n          x += dx;\n        }\n    }\n\n    p.renderWave = () => {\n        p.noStroke();\n        p.fill(40);\n        // A simple way to draw the wave with an ellipse at each location\n        for (let x = 0; x < yvalues.length; x++) {\n          p.ellipse(x * xspacing, p.windowHeight / 2 + yvalues[x], 1, 1);\n        }\n    }\n\n    p.renderWave2 = () => {\n        p.noStroke();\n        p.fill(40);\n        // A simple way to draw the wave with an ellipse at each location\n        for (let x = 0; x < yvalues.length; x++) {\n          p.ellipse(x * xspacing, p.windowHeight / 2 + yvalues[x], 1, 1);\n        }\n    }\n\n\n}\n\nexport default testSketch"]},"metadata":{},"sourceType":"module"}